plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Load keystore properties for release signing
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def hasKeystoreFromFile = false
def hasKeystoreFromEnv = false
def envKeystore = [:]

if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withInputStream { keystoreProperties.load(it) }
    // Basic validation + reject known placeholders
    def invalids = ['REPLACE_ME_KEY_ALIAS', 'your_key_alias_here', '${ANDROID_KEY_ALIAS}'] as Set
    hasKeystoreFromFile =
        keystoreProperties['keyAlias'] &&
        !invalids.contains(keystoreProperties['keyAlias']) &&
        keystoreProperties['keyPassword'] &&
        keystoreProperties['storePassword'] &&
        keystoreProperties['storeFile']
}

// Fallback: read from environment if file is absent/invalid (for CI)
if (!hasKeystoreFromFile) {
    def req = ['ANDROID_KEY_ALIAS','ANDROID_KEY_PASSWORD','ANDROID_KEYSTORE_PASSWORD','ANDROID_KEYSTORE_FILE']
    hasKeystoreFromEnv = req.every { System.getenv(it) }
    if (hasKeystoreFromEnv) {
        envKeystore = [
            keyAlias     : System.getenv('ANDROID_KEY_ALIAS'),
            keyPassword  : System.getenv('ANDROID_KEY_PASSWORD'),
            storePassword: System.getenv('ANDROID_KEYSTORE_PASSWORD'),
            storeFile    : System.getenv('ANDROID_KEYSTORE_FILE'),
        ]
    }
}

def hasKeystore = hasKeystoreFromFile || hasKeystoreFromEnv

// Suppress obsolete options warnings emitted by transitive JavaCompile tasks
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-Xlint:-options")
}

android {
    namespace = "network.mostro.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    signingConfigs {
        if (hasKeystore) {
            release {
                if (hasKeystoreFromFile) {
                    keyAlias     keystoreProperties['keyAlias']
                    keyPassword  keystoreProperties['keyPassword']
                    storeFile    file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                } else if (hasKeystoreFromEnv) {
                    keyAlias     envKeystore.keyAlias
                    keyPassword  envKeystore.keyPassword
                    storeFile    file(envKeystore.storeFile)
                    storePassword envKeystore.storePassword
                }
            }
        }
    }

    defaultConfig {
        applicationId = "network.mostro.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        // Required by flutter_secure_storage (needs API 23+)
        def _requested = flutter.minSdkVersion as int
        def _effective = Math.max(_requested, 23)
        if (_effective > _requested) {
            logger.lifecycle("minSdkVersion raised from ${_requested} to ${_effective} to satisfy flutter_secure_storage (API 23+).")
        }
        minSdkVersion _effective
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            if (hasKeystore) {
                signingConfig signingConfigs.release
            } else {
                // Fallback to debug signing for development
                signingConfig signingConfigs.debug
                logger.warn("Release build using debug signing - keystore not available")
            }
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}
